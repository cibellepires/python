# -*- coding: utf-8 -*-
"""lista05coleções.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1IgW1dVmqgVcHEyu6DtfQKFZUMZ8-q8ke
"""

#ex 1 crie uma lista e imprima cada nome com laço for
nomes=['ana', 'bia', 'carla', 'dani', 'ellen']
for nome in nomes:
    print(nome)

#Ex2
a=list()
for n in range(5):
  n=int(input('Digite um número: '))
  a.append(n)
print(a)

#ex3
import numpy as np
b=np.array([2,4,6,8,10])
c=b*b

print(c)

#ex4
a=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]
b=list()
for numero in a:
  if numero%2==0:
    b.append(numero)
qtd=len(b)
print(f' há {qtd} números pares na lista')

#ex5 busca de lista

lista_de_frutas=['banana', 'maçã', 'morango', 'melão', 'abacaxi', 'uva', 'goiaba']
while True:
  p=str(input('Pergunte por uma fruta:'))
  a=p.lower()
  if a in lista_de_frutas:
    print(f'A fruta {a} está na lista')
  else:
    print(f'A fruta {a} não está na lista')

#ex7
d=[8.0, 6.5, 7.5]
m=sum(d)/len(d)
print(m)

#ex8
l=['sol', 'computador', 'lua', 'caneta']
for elemento in l:
  if len(elemento)>5:
   print(elemento)

#ex9

w=[1,2,6,8,9,34,5,3]
x=sorted(w)
if w==x:
  print('A lista está ordenada')
else:
  print('A lista não está ordenada')

#ex11
dicionario_escolar={'Ana':{'nota': 8.0}, 'Bia':{'nota':5.0}, 'Carla':{'nota': 7.5}}
print(dicionario_escolar)

#ex12
dicionario_escolar.update({'Dani':{'nota': 9.0}})
print(dicionario_escolar)

#ex 13
d={'ana':22, 'bruno':34, 'tiago':23, 'maria':45}
def pesquisar_idade(d):
  n=str(input('Digite o nome da pessoa para saber sua idade: ')).lower()
  if n in d:
    return d[n]
  else:
    return 'Pessoa não encontrada'
print(pesquisar_idade(d))

#ex14
lista_de_compras={'arroz':15.90, 'feijão':9.90, 'batata':3.90, 'café':20.90}

total=sum(lista_de_compras.values())
print(f'O total da compra é de R${total:.2f}')

#ex15
cadastro={'nome': 'Carlos', 'idade':30, 'email':'carlos@email.com'}
def pesquisar(cadastro):
  c=str(input('Digite o nome do campo que deseja pesquisar: ')).lower()
  if c=='idade':
    return cadastro['idade']
  elif c=='nome':
    return cadastro['nome']
  elif c=='email':
    return cadastro['email']
  else:
    return 'Campo não encontrado'

print(pesquisar(cadastro))

#ex 16
tupla=('vermelho', 'azul', 'amarelo', 'verde')
print(tupla[0])
print(tupla[3])

#ex 17
a=list()
for n in range(5):
  n=int(input('Digite um número: '))
  a.append(n)

soma=sum(a)
media-sum(a)/len(a)
print(f'A soma dos números é {soma} e a média é {media}')
print(a)

#ex18
lista1=[1,2,4,5,6,7,8,9]
lista2=[2,3,4,5,10,34,21,45,56]
# Convertendo as listas em conjuntos e encontrando a interseção
elementos_comuns = set(lista1) & set(lista2)

# Convertendo de volta para lista (opcional)
elementos_comuns_lista = list(elementos_comuns)

print("Elementos comuns:", elementos_comuns_lista)

m=(1,2,3,4,5,65,32,98,32,21,56,75,24,67,30,76)
def verificação(m):
  n=int(input('Digite um número para verificá-lo'))
  if n in m:
    return 'está na lista'
  else:
    return 'não está na lista'

print(verificação(m))

#ex20
conjunto_inicial={'ana', 'joao', 'caio', 'igor', 'joana', 'carlos', 'leticia'}
def alterações(conjunto_inicial):
  a=str(input('Digite o nome que deseja adicionar ao conjunto: '))
  b=str(input('Digite o nome que deseja remover do conjunto: '))
  if a in conjunto_inicial:
    return 'O nome já está no conjunto'
  if b not in conjunto_inicial:
    return 'O nome não está no conjunto'
  conjunto_inicial.add(a)
  conjunto_inicial.remove(b)
  return conjunto_inicial

print(alterações(conjunto_inicial))